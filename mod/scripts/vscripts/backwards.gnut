global function Backwards_Init

void function Backwards_Init() {

    #if SERVER
        AddCallback_OnPlayerRespawned( InvertPlayerLoadout )
        AddCallback_OnPlayerGetsNewPilotLoadout( InvertPlayerLoadoutOnLoadoutChange )
        AddCallback_OnPilotBecomesTitan( InvertTitanLoadoutOnTitan )
        // AddCallback_OnUpdateDerivedPlayerTitanLoadout( InvertTitanLoadoutOnLoadout )
    #endif
}

bool function BigShotgunsEnabled() {
    return GetCurrentPlaylistVarInt("big_shotgun_snipers", 0) == 1
}

bool function InvertedTitansEnabled() {
    return GetCurrentPlaylistVarInt("inverted_titans", 0) == 1
}

bool function InvertedPilotLoadoutsEnabled() {
    return GetCurrentPlaylistVarInt("inverted_pilot_loadouts", 0) == 1
}

bool function InvertedPilotAbilitiesEnabled() {
    return GetCurrentPlaylistVarInt("inverted_pilot_abilities", 0) == 1
}

array<string> xo16 = ["mp_titanweapon_xo16_vanguard","mp_weapon_alternator_smg","mp_weapon_autopistol","mp_weapon_car","mp_weapon_hemlok","mp_weapon_r97","mp_weapon_rspn101","mp_weapon_rspn101_og","mp_weapon_semipistol","mp_weapon_vinson"]
array<string> leadwall = ["mp_titanweapon_leadwall","mp_weapon_mastiff","mp_weapon_shotgun","mp_weapon_shotgun_pistol"]
array<string> meteor = ["mp_titanweapon_meteor","mp_weapon_epg","mp_weapon_mgl","mp_weapon_softball"]
array<string> particleaccelerator = ["mp_titanweapon_particle_accelerator","mp_weapon_hemlok_smg","mp_weapon_lstar","mp_weapon_pulse_lmg"]
array<string> predcannon = ["mp_titanweapon_predator_cannon","mp_weapon_esaw","mp_weapon_lmg" ]
array<string> sniper = ["mp_titanweapon_sniper","mp_weapon_defender","mp_weapon_doubletake","mp_weapon_sniper"]
array<string> sticky = ["mp_titanweapon_sticky_40mm","mp_weapon_dmr","mp_weapon_g2","mp_weapon_wingman_n"]
array<string> brute = ["mp_titanweapon_rocketeer_rocketstream","mp_weapon_wingman","mp_weapon_arc_launcher","mp_weapon_rocket_launcher","mp_weapon_smr"]

#if SERVER
    void function InvertTitanLoadoutOnLoadout( entity player, TitanLoadoutDef loadout )
    {
        InvertTitanLoadout( player )
    }

    void function InvertTitanLoadoutOnTitan( entity player, entity Titan )
    {
        InvertTitanLoadout( player )
    }

    void function InvertTitanLoadout( entity player )
    {
        if ( InvertedTitansEnabled() ) {
            array<entity> weapons = player.GetMainWeapons()
            array<entity> offhand = player.GetOffhandWeapons()

            for (int i = 0; i < 5; i++)
            {
                switch ( offhand[i].GetWeaponClassName() )
                {
                    // ION
                    case "mp_titanweapon_laser_lite":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_weapon_frag_grenade", OFFHAND_ORDNANCE )
                        break;

                    case "mp_titanability_laser_trip":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_weapon_satchel", OFFHAND_ANTIRODEO )
                        break;

                    case "mp_titanweapon_vortex_shield_ion":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_ability_holopilot", OFFHAND_SPECIAL )
                        break;

                    // SCORCH
                    case "mp_titanweapon_flame_wall":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_weapon_thermite_grenade", OFFHAND_ORDNANCE )
                        break;

                    case "mp_titanability_slow_trap":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_ability_grapple", OFFHAND_ANTIRODEO )
                        break;

                    case "mp_titanweapon_heat_shield":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_ability_cloak", OFFHAND_SPECIAL )
                        break;

                    // NORTHSTAR
                    case "mp_titanability_hover":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_weapon_grenade_electric_smoke", OFFHAND_ANTIRODEO )
                        break;

                    case "mp_titanweapon_dumbfire_rockets":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_weapon_frag_grenade", OFFHAND_ORDNANCE )
                        break;

                    case "mp_titanability_tether_trap":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_ability_grapple", OFFHAND_SPECIAL )
                        break;

                    // RONIN
                    case "mp_titanability_basic_block":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_ability_heal", OFFHAND_SPECIAL )
                        break;

                    case "mp_titanweapon_arc_wave":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_weapon_grenade_gravity", OFFHAND_ORDNANCE )
                        break;

                    case "mp_titanability_phase_dash":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_ability_shifter", OFFHAND_ANTIRODEO )
                        break;

                    case "melee_titan_sword":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "melee_pilot_sword", OFFHAND_MELEE )
                        break;

                    // TONE
                    case "mp_titanability_sonar_pulse":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_weapon_grenade_sonar", OFFHAND_ANTIRODEO )
                        break;

                    case "mp_titanweapon_tracker_rockets":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_weapon_frag_grenade", OFFHAND_ORDNANCE )
                        break;

                    case "mp_titanability_particle_wall":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_weapon_deployable_cover", OFFHAND_SPECIAL )
                        break;

                    // LEGION
                    case "mp_titanability_power_shot":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_ability_holopilot", OFFHAND_ORDNANCE )
                        break;

                    case "mp_titanability_gun_shield":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_weapon_grenade_emp", OFFHAND_SPECIAL )
                        break;

                    case "mp_titanability_ammo_swap":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_ability_grapple", OFFHAND_ANTIRODEO )
                        break;

                    // MONARCH
                    case "mp_titanweapon_stun_laser":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_weapon_frag_grenade", OFFHAND_SPECIAL )
                        break;

                    case "mp_titanability_rearm":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_ability_holopilot", OFFHAND_ANTIRODEO )
                        break;

                    case "mp_titanweapon_salvo_rockets":
                        player.TakeOffhandWeapon(i)
                        player.GiveOffhandWeapon( "mp_ability_heal", OFFHAND_ORDNANCE )
                        break;
                }
            }

            switch ( weapons[0].GetWeaponClassName() )
            {
                case "mp_titanweapon_particle_accelerator":
                    player.TakeWeaponNow( weapons[0].GetWeaponClassName() )
                    player.GiveWeapon( "mp_weapon_lstar" )
                    break;

                case "mp_titanweapon_leadwall":
                    player.TakeWeaponNow( weapons[0].GetWeaponClassName() )
                    player.GiveWeapon( "mp_weapon_mastiff" )
                    break;

                case "mp_titanweapon_meteor":
                    player.TakeWeaponNow( weapons[0].GetWeaponClassName() )
                    player.GiveWeapon( "mp_weapon_mgl" )
                    break;

                case "mp_titanweapon_predator_cannon":
                    player.TakeWeaponNow( weapons[0].GetWeaponClassName() )
                    player.GiveWeapon( "mp_weapon_lmg" )
                    break;

                case "mp_titanweapon_sniper":
                    player.TakeWeaponNow( weapons[0].GetWeaponClassName() )
                    player.GiveWeapon( "mp_weapon_sniper" )
                    break;

                case "mp_titanweapon_xo16_vanguard":
                    player.TakeWeaponNow( weapons[0].GetWeaponClassName() )
                    player.GiveWeapon( "mp_weapon_rspn101" )
                    break;

                case "mp_titanweapon_sticky_40mm":
                    player.TakeWeaponNow( weapons[0].GetWeaponClassName() )
                    player.GiveWeapon( "mp_weapon_dmr" )
                    break;
                case "mp_titanweapon_rocketeer_rocketstream":
                    player.TakeWeaponNow( weapons[0].GetWeaponClassName() )
                    player.GiveWeapon( "mp_weapon_softball" )
                    break;
            }

            SendHudMessage( player, "Pilot loadout equipped!", -1, 0.4, 255, 255, 255, 255, 0.15, 3.0, 0.5 )

        }
    }

    void function InvertPlayerLoadout( entity player ) {

        if ( InvertedPilotAbilitiesEnabled() )
        {
            array<entity> weapons = player.GetMainWeapons()
            entity weapon = weapons[0]
            array<entity> offhand = player.GetOffhandWeapons()

            if ( xo16.contains( weapon.GetWeaponClassName() ) )
            {
                player.TakeOffhandWeapon(0)
                player.TakeOffhandWeapon(1)
                player.GiveOffhandWeapon( "mp_titanweapon_salvo_rockets", OFFHAND_ORDNANCE )
                player.GiveOffhandWeapon( "mp_titanweapon_stun_laser", OFFHAND_SPECIAL )
            }
            else if ( leadwall.contains( weapon.GetWeaponClassName() ) )
            {
                player.TakeOffhandWeapon(0)
                player.TakeOffhandWeapon(1)
                player.GiveOffhandWeapon( "mp_titanweapon_arc_wave", OFFHAND_ORDNANCE )
                player.GiveOffhandWeapon( "mp_titanability_phase_dash", OFFHAND_SPECIAL )
            }
            else if ( meteor.contains( weapon.GetWeaponClassName() ) )
            {
                player.TakeOffhandWeapon(0)
                player.TakeOffhandWeapon(1)
                player.GiveOffhandWeapon( "mp_titanweapon_flame_wall", OFFHAND_ORDNANCE )
                player.GiveOffhandWeapon( "mp_titanweapon_heat_shield", OFFHAND_SPECIAL )
            }
            else if ( particleaccelerator.contains( weapon.GetWeaponClassName() ) )
            {
                player.TakeOffhandWeapon(0)
                player.TakeOffhandWeapon(1)
                player.GiveOffhandWeapon( "mp_titanability_laser_trip", OFFHAND_ORDNANCE )
                player.GiveOffhandWeapon( "mp_titanweapon_vortex_shield", OFFHAND_SPECIAL )
            }
            else if ( predcannon.contains( weapon.GetWeaponClassName() ) )
            {
                player.TakeOffhandWeapon(0)
                player.TakeOffhandWeapon(1)
                player.GiveOffhandWeapon( "mp_titanability_gun_shield", OFFHAND_ORDNANCE )
                player.GiveOffhandWeapon( "mp_titanweapon_salvo_rockets", OFFHAND_SPECIAL )
            }
            else if ( sniper.contains( weapon.GetWeaponClassName() ) )
            {
                player.TakeOffhandWeapon(0)
                player.TakeOffhandWeapon(1)
                player.GiveOffhandWeapon( "mp_titanweapon_dumbfire_rockets", OFFHAND_ORDNANCE )
                player.GiveOffhandWeapon( "mp_titanability_hover", OFFHAND_SPECIAL )
            }
            else if ( sticky.contains (weapon.GetWeaponClassName() ) )
            {
                player.TakeOffhandWeapon(0)
                player.TakeOffhandWeapon(1)
                player.GiveOffhandWeapon( "mp_titanweapon_salvo_rockets", OFFHAND_ORDNANCE )
                player.GiveOffhandWeapon( "mp_titanability_sonar_pulse", OFFHAND_SPECIAL )
            }
            else if ( brute.contains (weapon.GetWeaponClassName() ) )
            {
                player.TakeOffhandWeapon(0)
                player.TakeOffhandWeapon(1)
                player.GiveOffhandWeapon( "mp_titanability_hover", OFFHAND_ORDNANCE )
                player.GiveOffhandWeapon( "mp_titanweapon_vortex_shield", OFFHAND_SPECIAL )
            }
        }

        if ( BigShotgunsEnabled() )
        {
            array<string> guns = [ "mp_titanweapon_leadwall", "mp_titanweapon_sniper", "mp_titanweapon_sniper" ]
            for ( int i = 0; i < 3; i++ )
            {
                player.TakeWeaponNow( player.GetMainWeapons()[i].GetWeaponClassName() )
                player.GiveWeapon( guns[i] )

                player.TakeOffhandWeapon(5)
                player.GiveOffhandWeapon( "melee_titan_sword", OFFHAND_MELEE )
            }
            SendHudMessage( player, "big mastiff", -1, 0.4, 255, 255, 255, 255, 0.15, 3.0, 0.5 )
        }

        else if ( InvertedPilotLoadoutsEnabled() )
        {
            bool loadout = false

            foreach ( entity weapon in player.GetMainWeapons() )
            {
                if ( xo16.contains( weapon.GetWeaponClassName() ) && !loadout )
                {
                    player.TakeWeaponNow( weapon.GetWeaponClassName() )
                    player.GiveWeapon( "mp_titanweapon_xo16_shorty" )
                    loadout = true
                }
                else if ( leadwall.contains( weapon.GetWeaponClassName() ) && !loadout )
                {
                    player.TakeWeaponNow( weapon.GetWeaponClassName() )
                    player.GiveWeapon( "mp_titanweapon_leadwall" )
                    player.TakeOffhandWeapon(5)
                    player.GiveOffhandWeapon( "melee_titan_sword", OFFHAND_MELEE )
                    loadout = true
                }
                else if ( meteor.contains( weapon.GetWeaponClassName() ) && !loadout )
                {
                    player.TakeWeaponNow( weapon.GetWeaponClassName() )
                    player.GiveWeapon( "mp_titanweapon_meteor" )
                    loadout = true
                }
                else if ( particleaccelerator.contains( weapon.GetWeaponClassName() ) && !loadout )
                {
                    player.TakeWeaponNow( weapon.GetWeaponClassName() )
                    player.GiveWeapon( "mp_titanweapon_particle_accelerator", ["burn_mod_titan_particle_accelerator"])
                    loadout = true
                }
                else if ( predcannon.contains( weapon.GetWeaponClassName() ) && !loadout )
                {
                    player.TakeWeaponNow( weapon.GetWeaponClassName() )
                    player.GiveWeapon( "mp_titanweapon_predator_cannon" )
                    loadout = true
                }
                else if ( sniper.contains( weapon.GetWeaponClassName() ) && !loadout )
                {
                    player.TakeWeaponNow( weapon.GetWeaponClassName() )
                    player.GiveWeapon( "mp_titanweapon_sniper" , ["instant_shot"])
                    loadout = true
                }
                else if ( sticky.contains ( weapon.GetWeaponClassName() ) && !loadout )
                {
                    player.TakeWeaponNow( weapon.GetWeaponClassName() )
                    player.GiveWeapon( "mp_titanweapon_sticky_40mm" )
                    loadout = true
                }
                else if ( brute.contains ( weapon.GetWeaponClassName() ) && !loadout )
                {
                    player.TakeWeaponNow( weapon.GetWeaponClassName() )
                    player.GiveWeapon( "mp_titanweapon_rocketeer_rocketstream" )
                    loadout = true
                }
            }

            for (int i = 1; i < player.GetMainWeapons().len(); i++)
            {
                player.TakeWeaponNow( player.GetMainWeapons()[i].GetWeaponClassName() )
            }

            SendHudMessage( player, "Titan loadout equipped!", -1, 0.4, 255, 255, 255, 255, 0.15, 3.0, 0.5 )
        }
    }

    void function InvertPlayerLoadoutOnLoadoutChange(entity player, PilotLoadoutDef loadout ) {
        InvertPlayerLoadout( player )
    }


#endif
